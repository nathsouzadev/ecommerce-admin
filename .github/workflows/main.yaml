# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Development

on:
  pull_request:
    branches:
      - main

env:
  ## Sets environment variable
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: /sign-in
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: /sign-up
  NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /dashboard
  NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /dashboard
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

        # ESLint and Prettier must be in `package.json`
      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint:check

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

  integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run cypress tests
        uses: cypress-io/github-action@v6

      - name: Create environment variable with protocol
        id: create-base-url
        run: |
          # Capture the URL from the previous step (replace if necessary)
          APP_URL=${{ steps.capture-url.outputs.CYPRESS_BASE_URL }}

          # Prepend http:// if protocol is missing
          if [[ ! $APP_URL =~ ^http(s)?:// ]]; then
            echo "WARNING: Captured URL '$APP_URL' doesn't include protocol, prepending http://"
            APP_URL="http://${APP_URL}"
          fi

          # Export the final base URL with protocol as an environment variable
          echo "CYPRESS_BASE_URL=$APP_URL" >> $GITHUB_ENV

          with:
            browser: chrome
            headed: true

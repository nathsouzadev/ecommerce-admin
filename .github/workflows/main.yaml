# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Development

on:
  pull_request:
    branches:
      - main

env:
  ## Sets environment variable
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: /sign-in
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: /sign-up
  NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: /dashboard
  NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: /dashboard
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

        # ESLint and Prettier must be in `package.json`
      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

  wait-for-vercel-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve deployment URL (example on how to set an ENV var)
        run: 'echo VERCEL_DEPLOYMENT_URL=ecommerce-admin-git-${{ github.ref_name }}-nathsouza.vercel.app >> $GITHUB_ENV'

      - uses: UnlyEd/github-action-await-vercel@v1 # TODO best practices recommend to use a fixed version instead of @v1 for production usage (i.e: @v1.2.32)
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ env.VERCEL_DEPLOYMENT_URL }}
          timeout: 10 # Wait for 10 seconds before failing

      - name: Displays the deployment name (example on how to read information about the deployment)
        run: 'echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}'

  integration:
    needs:
      - wait-for-vercel-deployment

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          headed: true
          config: baseUrl=https://ecommerce-admin-git-${{ github.ref_name }}-nathsouza.vercel.app
